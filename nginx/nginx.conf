user www-data;
daemon off;

env REDIS_PORT_6379_TCP_ADDR;
env REDIS_PORT_6379_TCP_PORT;

events {
        worker_connections 768;
}

http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        server {
                listen 80 default_server;
                root /usr/share/nginx/html;
                index index.html index.htm;

                location / {
                        set $forward "";

                        rewrite_by_lua '
                                local redis = require "nginx.redis"
                                local client = redis:new()
                                local redishost = os.getenv("REDIS_PORT_6379_TCP_ADDR")
                                local redisport = os.getenv("REDIS_PORT_6379_TCP_PORT")
                                local ok, _ = client:connect(redishost, redisport)
                                if not ok then
                                        ngx.exit(ngx.HTTP_SERVICE_UNAVAILABLE)
                                end
                                local sub, _ = string.gsub(ngx.var.host, "([^%.]+)%..*", "%1")
                                local res, err = client:get(sub)
                                if err then
                                        ngx.exit(ngx.HTTP_SERVICE_UNAVAILABLE)
                                end
                                if res == ngx.null then
                                        ngx.exit(ngx.HTTP_NOT_FOUND)
                                end
                                ngx.var.forward = res
                        ';

                        proxy_set_header Host $host;
                        proxy_set_header X-Real-IP $remote_addr;
                        proxy_set_header X-Forwarded-Host $host;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header X-Forwarded-Proto $scheme;
                        proxy_pass http://$forward;
                }
        }
}